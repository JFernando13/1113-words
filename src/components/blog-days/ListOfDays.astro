---
import { getCollection } from "astro:content";
import SmileIcon from "../icons/emojis/SmileIcon.astro";
import ArrowRightIcon from "../icons/navegation/ArrowRightIcon.astro";
import ArrowLeftIcon from "../icons/navegation/ArrowLeftIcon.astro";

import { defaultLanguage } from "~/i18n/ui";
import { getTranslation } from "~/i18n/utils";
import CardDay from "./CardDay.astro";

const { currentLocale = defaultLanguage } = Astro;

const t = getTranslation(currentLocale);

const allDays = await getCollection("days").then((days) => {
  return days
    .filter((day) => {
      const lang = day.slug.split("/")[0];
      return lang === currentLocale;
    })
    .toSorted((a, b) => a.data.day - b.data.day)
    .slice(0, 6);
});
---

<section class="day-container">
  {
    allDays.map(({ data, slug }) => {
      const [, ...id] = slug.split("/");

      return <CardDay data={data} id={id.join("/")} />;
    })
  }
</section>

<!-- Navegation -->
<!-- <section class="flex justify-evenly">
  <button>
    <ArrowLeftIcon />
  </button>
  <button>
    <ArrowRightIcon />
  </button>
</section> -->

<style>
  .day-container {
    grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));
    @apply grid gap-4 gap-y-12 my-14 relative cursor-pointer place-items-center;
  }

  button {
    @apply rounded-full h-12 w-12 bg-[#2A3041] flex justify-center items-center text-xs transition-colors;

    &:hover {
      @apply bg-[#47506A];
    }
  }
</style>
